/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PublicStateHealthOrganization;

import Business.Country.OpioidMedication;
import Business.EcoSystem;
import Business.Network.NetworkCountry;
import Business.Network.NetworkState;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author sonal
 */
public class ViewStateStatistics extends javax.swing.JPanel {
JPanel userProcessContainer;
OrganizationDirectory od;
EcoSystem business;
NetworkCountry cNetwork;
UserAccount account;
    /**
     * Creates new form ViewCountryStatistics
     */

    ViewStateStatistics(JPanel userProcessContainer,OrganizationDirectory od,EcoSystem business,NetworkCountry cNetwork,UserAccount account) {
initComponents();
this.userProcessContainer=userProcessContainer;
this.od=od;
this.business=business;
this.cNetwork=cNetwork;
this.account=account;
populateCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backjButton1 = new javax.swing.JButton();
        stateComboBox = new javax.swing.JComboBox();
        nextBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        revrehBtn = new javax.swing.JButton();
        chartJPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backjButton1.setBackground(new java.awt.Color(36, 47, 65));
        backjButton1.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        backjButton1.setForeground(new java.awt.Color(255, 255, 255));
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 112, -1));

        stateComboBox.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add(stateComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 79, 30));

        nextBtn.setBackground(new java.awt.Color(36, 47, 65));
        nextBtn.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        nextBtn.setForeground(new java.awt.Color(255, 255, 255));
        nextBtn.setText("Proceed>>");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });
        add(nextBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, -1, -1));

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Hospital statistics for each state");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, -1, -1));

        jLabel2.setFont(new java.awt.Font("Dubai Medium", 0, 13)); // NOI18N
        jLabel2.setText("Patients in rehab vs patients on reversal medication");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        revrehBtn.setBackground(new java.awt.Color(36, 47, 65));
        revrehBtn.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        revrehBtn.setForeground(new java.awt.Color(255, 255, 255));
        revrehBtn.setText("Proceed>>");
        revrehBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revrehBtnActionPerformed(evt);
            }
        });
        add(revrehBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 400, -1, -1));
        add(chartJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, 573, 432));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utility/bar-graphs-3d-wallpaper.jpg"))); // NOI18N
        jLabel6.setText("jLabel3");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-420, -1580, 2500, 1820));

        jLabel3.setFont(new java.awt.Font("Dubai Medium", 0, 13)); // NOI18N
        jLabel3.setText("Opioid usage per hospital");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        StateStatsJPanel muajp = new StateStatsJPanel(userProcessContainer,business,(NetworkState)stateComboBox.getSelectedItem(),cNetwork,account);
        userProcessContainer.add("viewstatestats", muajp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_nextBtnActionPerformed

    private void revrehBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revrehBtnActionPerformed
        // TODO add your handling code here:
        
//        ReversalRehabJPanel muajp = new ReversalRehabJPanel(userProcessContainer,business,(NetworkState)stateComboBox.getSelectedItem(),cNetwork,account);
//        userProcessContainer.add("viewCountryStatistics", muajp);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);

NetworkState networkState = (NetworkState)stateComboBox.getSelectedItem();

  int rehabCount = networkState.getRehabCount();
        int reversalCount= networkState.getReversalCount();
         DefaultCategoryDataset barchartdata = new DefaultCategoryDataset();
         DefaultPieDataset piedata = new DefaultPieDataset();
         
          piedata.setValue("Rehab",rehabCount);
          //from here
          
          piedata.setValue("Reversal", reversalCount);
         
         //to here
         JFreeChart piechart = ChartFactory.createPieChart3D("Rehab vs Reversal", piedata, true, true, true);
        
//        CategoryPlot barch = piechart.getCategoryPlot();
//        barch.setRangeGridlinePaint(Color.magenta);
//        ChartFrame frame = new ChartFrame("Rehab vs Reversal",piechart);
//        frame.setVisible(true);
//        frame.setSize(1200,600);
        
        
         ChartPanel barpanel = new ChartPanel(piechart);
        
        chartJPanel.removeAll();
        
        chartJPanel.add(barpanel,BorderLayout.CENTER);
        chartJPanel.repaint();
        chartJPanel.validate();
    }//GEN-LAST:event_revrehBtnActionPerformed
void populateCombo()
        
{
    stateComboBox.removeAll();
   
    for(NetworkState state:cNetwork.getNetworkStateList())
    {
        System.out.println(state.getName());
        stateComboBox.addItem(state);
    }

}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JPanel chartJPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton revrehBtn;
    private javax.swing.JComboBox stateComboBox;
    // End of variables declaration//GEN-END:variables
}
