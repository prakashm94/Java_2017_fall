/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PublicStateHealthOrganization;

import Business.Country.OpioidMedication;
import Business.EcoSystem;
import Business.Hospital.Doctor;
import Business.Network.NetworkCountry;
import Business.Network.NetworkState;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Vignesh Murali
 */
public class ViewCountryStatistics extends javax.swing.JPanel {

    JPanel userProcessContainer;
OrganizationDirectory od;
EcoSystem business;
NetworkCountry cNetwork;
UserAccount account;
    /**
     * Creates new form ViewCountryStatistics
     */

    ViewCountryStatistics(JPanel userProcessContainer, OrganizationDirectory od, EcoSystem business, NetworkCountry cNetwork, UserAccount account) {
         initComponents();
         this.userProcessContainer=userProcessContainer;
         this.od=od;
         this.business=business;
         this.cNetwork=cNetwork;
         this.account=account;
         userProcessContainer.setSize(1920, 1080);
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stateViolBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backjButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        statePotAddBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        statevsAddBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        opvspotaddBtn = new javax.swing.JButton();
        chartJPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stateViolBtn.setBackground(new java.awt.Color(36, 47, 65));
        stateViolBtn.setFont(new java.awt.Font("Dubai Medium", 0, 13)); // NOI18N
        stateViolBtn.setForeground(new java.awt.Color(255, 255, 255));
        stateViolBtn.setText("Proceed>>");
        stateViolBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateViolBtnActionPerformed(evt);
            }
        });
        add(stateViolBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 320, -1, -1));

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Countrywise Statistics");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        backjButton1.setBackground(new java.awt.Color(36, 47, 65));
        backjButton1.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        backjButton1.setForeground(new java.awt.Color(255, 255, 255));
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 112, -1));

        jLabel2.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel2.setText("Potentially  addicted patients per state");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, 40));

        statePotAddBtn.setBackground(new java.awt.Color(36, 47, 65));
        statePotAddBtn.setFont(new java.awt.Font("Dubai Medium", 0, 13)); // NOI18N
        statePotAddBtn.setForeground(new java.awt.Color(255, 255, 255));
        statePotAddBtn.setText("Proceed>>");
        statePotAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statePotAddBtnActionPerformed(evt);
            }
        });
        add(statePotAddBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 370, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel3.setText("Addicted patients per state");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, -1, -1));

        statevsAddBtn.setBackground(new java.awt.Color(36, 47, 65));
        statevsAddBtn.setFont(new java.awt.Font("Dubai Medium", 0, 13)); // NOI18N
        statevsAddBtn.setForeground(new java.awt.Color(255, 255, 255));
        statevsAddBtn.setText("Proceed>>");
        statevsAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statevsAddBtnActionPerformed(evt);
            }
        });
        add(statevsAddBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel5.setText("Potentially addicted patients per opioid");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, -1, -1));

        opvspotaddBtn.setBackground(new java.awt.Color(36, 47, 65));
        opvspotaddBtn.setFont(new java.awt.Font("Dubai Medium", 0, 13)); // NOI18N
        opvspotaddBtn.setForeground(new java.awt.Color(255, 255, 255));
        opvspotaddBtn.setText("Proceed>>");
        opvspotaddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opvspotaddBtnActionPerformed(evt);
            }
        });
        add(opvspotaddBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 430, -1, -1));
        add(chartJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 280, 1040, 570));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utility/bar-graphs-3d-wallpaper.jpg"))); // NOI18N
        jLabel6.setText("jLabel3");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-420, -1600, 2500, 1820));

        jLabel7.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel7.setText("Violations per state");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void stateViolBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateViolBtnActionPerformed
        // TODO add your handling code here:
        
         
         DefaultCategoryDataset  barchartdata = new DefaultCategoryDataset();
          
        for(NetworkState ns : cNetwork.getNetworkStateList())
        {
              
                    
                    barchartdata.setValue(ns.getViolationCount(), "Violations", ns.getName());
                
        }
        
        JFreeChart barchart = ChartFactory.createBarChart("Doctor Violations per State", "State", "No. of Violations", barchartdata, PlotOrientation.VERTICAL, true, true, true);
        CategoryPlot barch = barchart.getCategoryPlot();
        barch.setRangeGridlinePaint(Color.red);
        
        
        ChartPanel barpanel = new ChartPanel(barchart);
        
        chartJPanel.removeAll();
        
        chartJPanel.add(barpanel,BorderLayout.CENTER);
        chartJPanel.repaint();
        chartJPanel.validate();
        
//        
//        ChartFrame frame = new ChartFrame("Violations per State",barchart);
//        frame.setVisible(true);
//        frame.setSize(350,450);
        
    }//GEN-LAST:event_stateViolBtnActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void statePotAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statePotAddBtnActionPerformed
        // TODO add your handling code here:
        
         DefaultCategoryDataset  barchartdata = new DefaultCategoryDataset();
          
        for(NetworkState ns : cNetwork.getNetworkStateList())
        {
              
                    
                    barchartdata.setValue(ns.getReversalCount(), "Potentially Addicted Patients", ns.getName());
                
        }
        
        JFreeChart barchart = ChartFactory.createBarChart("Potentially Addicted Patients per State", "State", "No. of Potentially addicted patients", barchartdata, PlotOrientation.VERTICAL, true, true, true);
        CategoryPlot barch = barchart.getCategoryPlot();
        barch.setRangeGridlinePaint(Color.red);
//        ChartFrame frame = new ChartFrame("Potentially Addicted patients per State",barchart);
//        frame.setVisible(true);
//        frame.setSize(350,450);
        
        ChartPanel barpanel = new ChartPanel(barchart);
        
        chartJPanel.removeAll();
        
        chartJPanel.add(barpanel,BorderLayout.CENTER);
        chartJPanel.repaint();
        chartJPanel.validate();
    }//GEN-LAST:event_statePotAddBtnActionPerformed

    private void statevsAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statevsAddBtnActionPerformed
        // TODO add your handling code here:
          DefaultCategoryDataset  barchartdata = new DefaultCategoryDataset();
          
        for(NetworkState ns : cNetwork.getNetworkStateList())
        {
              
                    
                    barchartdata.setValue(ns.getRehabCount(), "Addicted Patients", ns.getName());
                
        }
        
        JFreeChart barchart = ChartFactory.createBarChart("Addicted Patients per State", "State", "No. of addicted patients", barchartdata, PlotOrientation.VERTICAL, true, true, true);
        CategoryPlot barch = barchart.getCategoryPlot();
        barch.setRangeGridlinePaint(Color.red);
//        ChartFrame frame = new ChartFrame("Addicted patients per State",barchart);
//        frame.setVisible(true);
//        frame.setSize(350,450);
        
        
        ChartPanel barpanel = new ChartPanel(barchart);
        
        chartJPanel.removeAll();
        
        chartJPanel.add(barpanel,BorderLayout.CENTER);
        chartJPanel.repaint();
        chartJPanel.validate();
        
    }//GEN-LAST:event_statevsAddBtnActionPerformed

    private void opvspotaddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opvspotaddBtnActionPerformed
        // TODO add your handling code here:
                  DefaultCategoryDataset  barchartdata = new DefaultCategoryDataset();
          
        for(NetworkCountry ns : business.getNetworkCList())
        {
              for(OpioidMedication om : ns.getOpioidList().getOpioidList())
              {
                  
                    
                    barchartdata.setValue(om.getPotentialAddictionCount(), "Addicted Patients", om.getOpioidName());
                
              }
        }
        
        JFreeChart barchart = ChartFactory.createBarChart("Potentially Addicted Patients per Opioid", "Opioid", "No. of Potentially addicted patients", barchartdata, PlotOrientation.VERTICAL, true, true, true);
        CategoryPlot barch = barchart.getCategoryPlot();
        barch.setRangeGridlinePaint(Color.red);
//        ChartFrame frame = new ChartFrame("Potentially Addicted patients per Opioid",barchart);
//        frame.setVisible(true);
//        frame.setSize(350,450);
        
        ChartPanel barpanel = new ChartPanel(barchart);
        
        chartJPanel.removeAll();
        
        chartJPanel.add(barpanel,BorderLayout.CENTER);
        chartJPanel.repaint();
        chartJPanel.validate();
    }//GEN-LAST:event_opvspotaddBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JPanel chartJPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton opvspotaddBtn;
    private javax.swing.JButton statePotAddBtn;
    private javax.swing.JButton stateViolBtn;
    private javax.swing.JButton statevsAddBtn;
    // End of variables declaration//GEN-END:variables
}
