/*
 * AdminWorkAreaJPanel.java
 *
 * Created on October 10, 2008, 8:50 AM
 */
package userinterface.Distributor.Supplier;

import Business.Country.OpioidMedication;
import Business.Pharmacy.Pharmacy;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.NetworkCountry;
import Business.Organization.HospitalOrganization;
import Business.Organization.Organization;
import Business.Organization.SupplierOrganization;
import Business.Supplier.Supplier;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PharmacyWorkRequest;
import Business.WorkQueue.ProviderWorkRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import utility.Validator;

/**
 *
 * @author sonal
 */
public class SupplierAdminWorkAreaJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount account;
    SupplierOrganization organization;
    Enterprise enterprise;
    EcoSystem business;
    Supplier s;
    NetworkCountry cNetwork;

    /**
     * Creates new form AdminWorkAreaJPanel
     */
    public SupplierAdminWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, SupplierOrganization organization, Enterprise enterprise, EcoSystem business,NetworkCountry cNetwork) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account = account;
        this.business = business;
        this.organization = organization;
        this.cNetwork=cNetwork;
        for (Supplier supplier : organization.getSupplierList().getSupplierList()) {
            if (account.getEmployee().getName().equals(supplier.getSupplierName())) {
                s = supplier;
                System.out.println("supplier name" + s.getSupplierName());
            }
        }
        System.out.println("busi" + business.getWorkQueue().getWorkRequestList().size());
        if (s.getWorkQueue() == null) {
            WorkQueue w = new WorkQueue();
            s.setWorkQueue(w);
        }
        populateCombo();
        populateWorkQueueTable();
        populateAvailable();
    }

    public void populateCombo() {
        for (OpioidMedication vaccine : cNetwork.getOpioidList().getOpioidList()) {
            comboVaccine.addItem(vaccine);
        }

    }

    public void populateWorkQueueTable() {
        DefaultTableModel model = (DefaultTableModel) requestTable.getModel();

        model.setRowCount(0);
    
        for (WorkRequest work : s.getWorkQueue().getWorkRequestList()){
           if(work instanceof ProviderWorkRequest){ 
            Object[] row = new Object[6];
            row[0] =  ((ProviderWorkRequest) work).getOpioidMed();
            row[1] = ((ProviderWorkRequest) work).getQuantity();
            row[2] = work;
            row[3] = work.getReceiver();
            row[4] = work.getSender();
            row[5] = ((ProviderWorkRequest) work).getSupplier();
            model.addRow(row);
           }
        }
    }

    public void populateAvailable() {
        DefaultTableModel model = (DefaultTableModel) availableTable.getModel();

        model.setRowCount(0);

        for (OpioidMedication vaccine : s.getOpioidMedList().getOpioidList()) {

            Object[] row = new Object[2];
            row[0] = vaccine.getOpioidName();
            row[1] = vaccine.getQuantity();
            model.addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        btnComplete = new javax.swing.JButton();
        reqBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        comboVaccine = new javax.swing.JComboBox();
        txtquant = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        sellBtn = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        errLbl = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 24)); // NOI18N
        jLabel1.setText("Supplier Work Area");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, -1, -1));
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 130, 20));

        btnComplete.setBackground(new java.awt.Color(36, 47, 65));
        btnComplete.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        btnComplete.setForeground(new java.awt.Color(255, 255, 255));
        btnComplete.setText("Complete");
        btnComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteActionPerformed(evt);
            }
        });
        add(btnComplete, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 450, 140, 60));

        reqBtn.setBackground(new java.awt.Color(36, 47, 65));
        reqBtn.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        reqBtn.setForeground(new java.awt.Color(255, 255, 255));
        reqBtn.setText("Assign To Me");
        reqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqBtnActionPerformed(evt);
            }
        });
        add(reqBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 450, 120, 60));

        availableTable.setBackground(new java.awt.Color(36, 47, 65));
        availableTable.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        availableTable.setForeground(new java.awt.Color(255, 255, 255));
        availableTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Opioid Name", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(availableTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 340, 500, 90));

        jLabel4.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel4.setText("Opioids Requested");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, 170, 30));

        jLabel5.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel5.setText("Opioids Available");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, 150, 30));

        requestTable.setBackground(new java.awt.Color(36, 47, 65));
        requestTable.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        requestTable.setForeground(new java.awt.Color(255, 255, 255));
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Opioid Name", "Quantity", "Status", "Receiver", "Sender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requestTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, 500, 90));

        comboVaccine.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        add(comboVaccine, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 450, 120, -1));

        txtquant.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        txtquant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtquantKeyPressed(evt);
            }
        });
        add(txtquant, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 450, 100, -1));

        jLabel2.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel2.setText("Opioid Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 450, 90, 20));

        backJButton.setBackground(new java.awt.Color(36, 47, 65));
        backJButton.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("Refresh");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 500, 120, 40));

        sellBtn.setBackground(new java.awt.Color(36, 47, 65));
        sellBtn.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        sellBtn.setForeground(new java.awt.Color(255, 255, 255));
        sellBtn.setText("Add Opioids");
        sellBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellBtnActionPerformed(evt);
            }
        });
        add(sellBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 450, 170, 30));

        btnDelete.setBackground(new java.awt.Color(36, 47, 65));
        btnDelete.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete request");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 450, -1, 60));

        errLbl.setForeground(new java.awt.Color(255, 51, 51));
        add(errLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 450, 390, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utility/tablets_capsules_multi-colored_drug_48978_1920x1080.jpg"))); // NOI18N
        jLabel6.setText("jLabel3");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 2500, 250));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            ProviderWorkRequest p = (ProviderWorkRequest) requestTable.getValueAt(selectedRow, 2);

            if (p.getReceiver() != null) {
                if (p.getStatus().equals("Pending")) {
                    
        if(account.getUsername().equalsIgnoreCase(p.getReceiver().getUsername())){
                    UserAccount a = p.getSender();
                    int temp =0;
                    if (s.getOpioidMedList().getOpioidList().size() <= 0) {
                        JOptionPane.showMessageDialog(null, "No Stock available. Request from Supplier");
                        return;
                    }
                    for (OpioidMedication v : s.getOpioidMedList().getOpioidList()) {
                        if (p.getOpioidMed().getOpioidName().equals(v.getOpioidName())) {
                            if (v.getQuantity() - p.getQuantity() < 0) {
                                JOptionPane.showMessageDialog(null, "No enough Vaccines for supply. Wait for sometime");
                                return;
                            }
                            temp=1;
                            v.setQuantity(v.getQuantity() - p.getQuantity());
                        }

                    }
                    if (temp == 0) {
                        JOptionPane.showMessageDialog(null, "No Stock available. Request from Supplier.");
                        return;
                    }
                    p.setStatus("Complete");
                    JOptionPane.showMessageDialog(null, "You have successfully completed the request");
                    populateWorkQueueTable();
                    populateAvailable();
                }
                } else {
                    JOptionPane.showMessageDialog(null, "You cannot complete request two times..");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please assign first");
            }

        }
    }//GEN-LAST:event_btnCompleteActionPerformed

    private void reqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqBtnActionPerformed
        int selectedRow = requestTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            ProviderWorkRequest p = (ProviderWorkRequest) requestTable.getValueAt(selectedRow, 2);
            if(p.getStatus().equalsIgnoreCase("Requested")){
            p.setStatus("Pending");
            p.setReceiver(account);

            populateWorkQueueTable();
            }else{
                JOptionPane.showMessageDialog(null, "You can not assign same thing twice", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
//        ProviderWorkRequest request= new ProviderWorkRequest();
//        request.setVaccine((Vaccine)comboVaccine.getSelectedItem());
//        request.setQuantity(Integer.parseInt(txtquant.getText()));
//        request.setStatus("Requested");
//        request.setSender(account);
//        //organization.getWorkQueue().getWorkRequestList().add(request);
//        s.getWorkQueue().getWorkRequestList().add(request);
//        populateWorkQueueTable();

    }//GEN-LAST:event_reqBtnActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        new SupplierAdminWorkAreaJPanel(userProcessContainer, account, organization, enterprise, business,cNetwork);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void sellBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellBtnActionPerformed
        // TODO add your handling code here:
        
        if(txtquant.getText().equals("")){
            errLbl.setText("Please enter amount of medicines to add before proceeding.");
            txtquant.setBorder(new LineBorder(Color.red));
        }
        else
        {
             errLbl.setText("");
            txtquant.setBorder(new LineBorder(Color.black));
            int quant = Integer.parseInt(txtquant.getText());
        OpioidMedication v = (OpioidMedication) comboVaccine.getSelectedItem();
        int temp = 0;
        for (OpioidMedication vaccine : s.getOpioidMedList().getOpioidList()) {
            if (v.getOpioidName().equals(vaccine.getOpioidName())) {
                temp = 1;
                vaccine.setQuantity(vaccine.getQuantity() + quant);
            }
        }

        if (temp == 0) {
            OpioidMedication vac = s.getOpioidMedList().addDisease();
            vac.setQuantity(quant);
//            vac.setDisease(v.get);
            vac.setOpioidName(v.getOpioidName());
        }
        populateAvailable();
        }
    }//GEN-LAST:event_sellBtnActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to delete the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            PharmacyWorkRequest p = (PharmacyWorkRequest) requestTable.getValueAt(selectedRow, 2);

            s.getWorkQueue().getWorkRequestList().remove(p);
            business.getWorkQueue().getWorkRequestList().remove(p);

            JOptionPane.showMessageDialog(null, "You have successfully deleted the account");
            populateWorkQueueTable();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtquantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtquantKeyPressed
        // TODO add your handling code here:
        Validator.onlyInteger(evt, txtquant);
    }//GEN-LAST:event_txtquantKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable availableTable;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnComplete;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox comboVaccine;
    private javax.swing.JLabel errLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton reqBtn;
    private javax.swing.JTable requestTable;
    private javax.swing.JButton sellBtn;
    private javax.swing.JTextField txtquant;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

}
