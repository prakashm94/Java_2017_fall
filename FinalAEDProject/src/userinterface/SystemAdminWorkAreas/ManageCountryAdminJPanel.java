/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkAreas;

import userinterface.CountryAdminWorkAreas.*;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.NetworkCountry;
import Business.Network.NetworkState;
import Business.Role.CountryAdminRole;

import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import utility.Validator;

/**
 *
 * @author raunak
 */
public class ManageCountryAdminJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private EcoSystem system;
    // private CountryNetwork cNetwork;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageCountryAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        //this.cNetwork=cNetwork;
        
        populateNetworkComboBox();
        populateTable();
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();
        ArrayList<String> countryList = new ArrayList<>();
        model.setRowCount(0);
        for (NetworkCountry network : system.getNetworkCList()) {
            countryList.add(network.getName());
            //  for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            for (UserAccount userAccount : system.getUserAccountDirectory().getUserAccountList()) {
                if (network.getName().equalsIgnoreCase(userAccount.getUsername())) {
                    Object[] row = new Object[2];
                    // row[0] = enterprise.getName();
                    row[0] = network;
                    row[1] = userAccount;
                    
                    model.addRow(row);
                    //     }
                }
            }
        }
        
        for (int i = 0; i <= model.getRowCount() - 1; i++) {
            if (countryList.contains(model.getValueAt(i, 0).toString())) {
                System.out.println("**" + model.getValueAt(i, 0));
                networkJComboBox.removeItem(model.getValueAt(i, 0));
            }
        }
    }
    
    private void populateNetworkComboBox() {
        networkJComboBox.removeAllItems();
        
        for (NetworkCountry network : system.getNetworkCList()) {
            networkJComboBox.addItem(network);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        errLbl = new javax.swing.JLabel();
        usrErrLbl = new javax.swing.JLabel();
        nameErrLbl = new javax.swing.JLabel();
        ctryErrLbl = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseJTable.setBackground(new java.awt.Color(36, 47, 65));
        enterpriseJTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        enterpriseJTable.setForeground(new java.awt.Color(255, 255, 255));
        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Network", "Username"
            }
        ));
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 290, 523, 230));

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Country Admin");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, -1, -1));

        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 540, 136, -1));

        jLabel2.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel2.setText("Username");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 610, -1, -1));

        usernameJTextField.setEditable(false);
        add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 610, 136, -1));

        submitJButton.setBackground(new java.awt.Color(36, 47, 65));
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("Submit");
        submitJButton.setBorderPainted(false);
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 690, 130, 50));

        jLabel4.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 640, -1, -1));

        nameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameJTextFieldKeyPressed(evt);
            }
        });
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 580, 136, -1));

        jLabel5.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel5.setText("Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 580, -1, -1));
        add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 640, 134, -1));

        backJButton.setBackground(new java.awt.Color(36, 47, 65));
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, 40));

        jLabel3.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel3.setText("Country Network");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 540, -1, -1));

        errLbl.setForeground(new java.awt.Color(255, 51, 51));
        add(errLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 640, 280, 20));

        usrErrLbl.setForeground(new java.awt.Color(255, 51, 51));
        add(usrErrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 610, 280, 20));

        nameErrLbl.setForeground(new java.awt.Color(255, 51, 51));
        add(nameErrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 580, 270, 20));

        ctryErrLbl.setForeground(new java.awt.Color(255, 51, 51));
        add(ctryErrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 540, 280, 20));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utility/flags-desktop-wallpaper-flag-national-logos-albums (1).jpg"))); // NOI18N
        jLabel6.setText("jLabel3");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 2500, 250));
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed
//    usernameJTextField.setText((String)networkJComboBox.getSelectedItem());
        if(networkJComboBox.getSelectedItem()==null)
            return;
        else
        {
        String user = networkJComboBox.getSelectedItem().toString();
        usernameJTextField.setText(user);
        }
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        if (usernameJTextField.getText().equals("")) {
            usrErrLbl.setText("Please enter a valid username");
            usernameJTextField.setBorder(new LineBorder(Color.red));
            return;
        }
        if (nameJTextField.getText().equals("")) {
            nameErrLbl.setText("Please enter a valid name");
            nameJTextField.setBorder(new LineBorder(Color.red));
            return;
        } else {
            // Enterprise system = (Enterprise) enterpriseJComboBox.getSelectedItem();
            usrErrLbl.setText("");
            nameErrLbl.setText("");
            ctryErrLbl.setText("");
            usernameJTextField.setBorder(new LineBorder(Color.black));
            nameJTextField.setBorder(new LineBorder(Color.black));
            String username = usernameJTextField.getText();
            String password = String.valueOf(passwordJPasswordField.getPassword());
            String name = nameJTextField.getText();
            if (Validator.chkPass(passwordJPasswordField, errLbl)) {
                if (networkJComboBox.getSelectedItem() == null) {
                    ctryErrLbl.setText("No country available");
                    return;
                }
                
                Employee employee = system.getEmployeeDirectory().createEmployee(name);
                if (EcoSystem.chckCountryAdminUser(username)) {
                    UserAccount account = null;
                    
                    account = system.getUserAccountDirectory().createUserAccount(username, password, employee, new CountryAdminRole());
                    networkJComboBox.removeItem(networkJComboBox.getSelectedItem());
                    System.out.println("Country added");
                    populateTable();
                } else {
                    usrErrLbl.setText("Please enter a unique username");
                }
            } else {
                //JOptionPane.showMessageDialog(null, "Enter value", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
        populateTable();
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        //  Component[] componentArray = userProcessContainer.getComponents();
        // Component component = componentArray[componentArray.length - 1];
        //CountryAdminWorkAreaJPanel sysAdminwjp = (CountryAdminWorkAreaJPanel) component;
        //sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void nameJTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameJTextFieldKeyPressed
        // TODO add your handling code here:
        Validator.onlyString(evt, nameJTextField);
    }//GEN-LAST:event_nameJTextFieldKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel ctryErrLbl;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel errLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameErrLbl;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    private javax.swing.JLabel usrErrLbl;
    // End of variables declaration//GEN-END:variables
}
