/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Hospital.HosOrganization;

import Business.Hospital.Doctor;
import Business.Pharmacy.Pharmacy;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Hospital.Patient;
import Business.Hospital.PhysicalTherapy;
import Business.Hospital.PhysicalTherapyDirectory;
import Business.Hospital.Report;
import Business.Hospital.ReportDirectory;
import Business.Organization.HospitalOrganization;
import Business.Organization.Organization;
import Business.Organization.SupplierOrganization;
import Business.Role.DoctorRole;
import Business.Role.PatientRole;
import Business.Role.PhysicalTherapyRole;
import Business.Role.Role;
import Business.Supplier.Supplier;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import utility.Validator;

/**
 *
 * @author sonal
 */
public class HospitalOrganizationManageUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUserAccountJPanel
     */
    JPanel userProcessContainer;
    UserAccount account; 
    HospitalOrganization organization; 
    Enterprise enterprise; 
    EcoSystem business;

    public HospitalOrganizationManageUserAccountJPanel(JPanel userProcessContainer, UserAccount account, HospitalOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account=account;
        this.business=business;
        this.organization= organization;

       // popOrganizationComboBox();
       // employeeJComboBox.removeAllItems();
        popData();
        populateEmployeeComboBox(organization);
        populateRoleComboBox(organization);
    }

//    public void popOrganizationComboBox() {
//        organizationJComboBox.removeAllItems();
//
//        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
//            organizationJComboBox.addItem(organization);
//        }
//    }
    
    public void populateEmployeeComboBox(HospitalOrganization organization){
        employeeJComboBox.removeAllItems();
        
        for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            employeeJComboBox.addItem(employee);
        }
        employeeJComboBox.removeItemAt(0);
    }
    
    private void populateRoleComboBox(HospitalOrganization e){
        roleJComboBox.removeAllItems();
        for (Role role : e.getSupportedRole()){
            if(role instanceof DoctorRole){
            roleJComboBox.addItem(role);
            }else if(role instanceof PhysicalTherapyRole){
            roleJComboBox.addItem(role);
            }
            
        }
    }

    public void popData() {

        DefaultTableModel model = (DefaultTableModel) userJTable.getModel();

        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                Object row[] = new Object[2];
                row[0] = ua;
                row[1] = ua.getRole();
                ((DefaultTableModel) userJTable.getModel()).addRow(row);
            }
        }
        
        model.removeRow(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createUserJButton = new javax.swing.JButton();
        nameJTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        employeeJComboBox = new javax.swing.JComboBox();
        backjButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        roleJComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        passwordJTextField = new javax.swing.JPasswordField();
        usrErrLbl = new javax.swing.JLabel();
        passErrLbl = new javax.swing.JLabel();
        empErrLbl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        createUserJButton.setBackground(new java.awt.Color(36, 47, 65));
        createUserJButton.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        createUserJButton.setForeground(new java.awt.Color(255, 255, 255));
        createUserJButton.setText("Create");
        createUserJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserJButtonActionPerformed(evt);
            }
        });
        add(createUserJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 680, 150, 50));

        nameJTextField.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 600, 146, -1));

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel1.setText("User Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 600, -1, -1));

        userJTable.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        userJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userJTable);
        if (userJTable.getColumnModel().getColumnCount() > 0) {
            userJTable.getColumnModel().getColumn(0).setResizable(false);
            userJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, 375, 179));

        jLabel2.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel2.setText("Password");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 640, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel3.setText("Employee");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 520, -1, -1));

        employeeJComboBox.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        add(employeeJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 520, 146, -1));

        backjButton1.setBackground(new java.awt.Color(36, 47, 65));
        backjButton1.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        backjButton1.setForeground(new java.awt.Color(255, 255, 255));
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 112, -1));

        jLabel4.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel4.setText("Role");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 570, -1, -1));

        roleJComboBox.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        roleJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleJComboBoxActionPerformed(evt);
            }
        });
        add(roleJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 570, 146, -1));

        jLabel6.setFont(new java.awt.Font("Dubai Medium", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Manage Hospital User Accounts");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 530, 30));

        passwordJTextField.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        add(passwordJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 640, 150, -1));

        usrErrLbl.setForeground(new java.awt.Color(255, 51, 51));
        add(usrErrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 600, 480, 30));
        add(passErrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 640, 600, 30));

        empErrLbl.setForeground(new java.awt.Color(255, 0, 0));
        add(empErrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 520, 600, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utility/social-network-media-data-ss-1920.jpg"))); // NOI18N
        jLabel7.setText("jLabel3");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 2500, 250));
    }// </editor-fold>//GEN-END:initComponents

    private void createUserJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserJButtonActionPerformed
        String userName = nameJTextField.getText();
        String password = passwordJTextField.getText();
         empErrLbl.setText("");
            employeeJComboBox.setBorder(new LineBorder(Color.black));
        if(employeeJComboBox.getSelectedItem()==null)
        {
            empErrLbl.setText("There is no employee currently available.");
            employeeJComboBox.setBorder(new LineBorder(Color.red));
            return;
        }
        if(userName.equals(""))
        {
            usrErrLbl.setText("Please enter a username.");
           nameJTextField.setBorder(new LineBorder(Color.red));
           return;
            
        }
        if(!Validator.chkPass(passwordJTextField, passErrLbl))
        {
            
            return;
        }
        if(EcoSystem.checkIfUsernameIsUnique(userName)){
            
            usrErrLbl.setText("");
           nameJTextField.setBorder(new LineBorder(Color.black));
            usrErrLbl.setText("");
           nameJTextField.setBorder(new LineBorder(Color.black));
            
        Employee employee = (Employee) employeeJComboBox.getSelectedItem();
        Role role = (Role) roleJComboBox.getSelectedItem();
      
       
        organization.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
            System.out.println("1");
         /*if (role instanceof PatientRole){     
             System.out.println("2");
           Patient pa = organization.getHosPatientDir().addPatient();
           pa.setPatientName(employee.getName());
           
           if(organization.getReportDir()==null){
               organization.setReportDir(new ReportDirectory());
           }
          Report r= organization.getReportDir().addReport();
          r.setPatient(pa);
           
          
        }*/
         
         if (role instanceof DoctorRole){
           Doctor d = organization.getHosDoctorDir().addDoctor();
           d.setDocName(employee.getName());
            System.out.println(d.getDocName());
          
        }
         
          if (role instanceof PhysicalTherapyRole){
              if(organization.getHosPtDir()==null){
                  organization.setHosPtDir(new PhysicalTherapyDirectory());
              }
           PhysicalTherapy pt = organization.getHosPtDir().addPhysicalTherapy();
           pt.setPtName(employee.getName());
            System.out.println(pt.getPtName());
          
        }
         
     
        popData();
        }
        else{
           usrErrLbl.setText("Please enter unique username");
           nameJTextField.setBorder(new LineBorder(Color.red));
        }
    }//GEN-LAST:event_createUserJButtonActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void roleJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleJComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton createUserJButton;
    private javax.swing.JLabel empErrLbl;
    private javax.swing.JComboBox employeeJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JLabel passErrLbl;
    private javax.swing.JPasswordField passwordJTextField;
    private javax.swing.JComboBox roleJComboBox;
    private javax.swing.JTable userJTable;
    private javax.swing.JLabel usrErrLbl;
    // End of variables declaration//GEN-END:variables
}
